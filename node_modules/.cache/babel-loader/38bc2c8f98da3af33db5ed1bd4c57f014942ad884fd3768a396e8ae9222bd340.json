{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinabramson/Repositories/toy-robot-simulator/src/components/MatrixContainer/MatrixContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Grid, Paper } from \"@mui/material\";\nimport \"./MatrixContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Direction = /*#__PURE__*/function (Direction) {\n  Direction[Direction[\"NORTH\"] = 0] = \"NORTH\";\n  Direction[Direction[\"SOUTH\"] = 1] = \"SOUTH\";\n  Direction[Direction[\"EAST\"] = 2] = \"EAST\";\n  Direction[Direction[\"WEST\"] = 3] = \"WEST\";\n  return Direction;\n}(Direction || {});\nconst MatrixContainer = () => {\n  _s();\n  const initRobot = {\n    row: null,\n    column: null,\n    // setting the initial direction to be north\n    direction: Direction.NORTH\n  };\n  const [robot, setRobot] = useState(initRobot);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", e => handleKeyDown(e, robot));\n  }, []);\n  const handleCellClick = (x, y) => {\n    setRobot({\n      row: x,\n      column: y,\n      direction: robot.direction\n    });\n  };\n  const handleKeyDown = (event, robot) => {\n    console.log(\"handle jey down\");\n    const newRobot = robot;\n    switch (robot.direction) {\n      case Direction.NORTH:\n        if (event.key === \"ArrowLeft\") {\n          console.log(\"arrow left\");\n          newRobot.direction = Direction.WEST;\n        }\n        if (event.key === \"ArrowRight\") {\n          newRobot.direction = Direction.EAST;\n        }\n        break;\n      case Direction.SOUTH:\n        break;\n      case Direction.EAST:\n        break;\n      case Direction.WEST:\n        break;\n    }\n    setRobot(newRobot);\n  };\n  const renderCell = (row, column) => {\n    const isRobotHere = robot.row === row && robot.column === column;\n    const direction = robot.direction;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12 / 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        onClick: () => handleCellClick(row, column),\n        onKeyDown: event => handleKeyDown(event, direction),\n        children: isRobotHere ? \"ðŸ¤–\" : `${row},${column},${direction}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, `${row}, ${column}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  const grid = [];\n  for (let row = 4; row >= 0; row--) {\n    const cols = [];\n    for (let col = 0; col < 5; col++) {\n      cols.push(renderCell(col, row));\n    }\n    grid.push( /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      children: cols\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix--container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixContainer, \"O9ktlda0rCGb11QYF+ypNnNqE20=\");\n_c = MatrixContainer;\nexport default MatrixContainer;\nvar _c;\n$RefreshReg$(_c, \"MatrixContainer\");","map":{"version":3,"names":["useEffect","useState","Grid","Paper","jsxDEV","_jsxDEV","Direction","MatrixContainer","_s","initRobot","row","column","direction","NORTH","robot","setRobot","document","addEventListener","e","handleKeyDown","handleCellClick","x","y","event","console","log","newRobot","key","WEST","EAST","SOUTH","renderCell","isRobotHere","item","xs","children","onClick","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","grid","cols","col","push","container","className","spacing","_c","$RefreshReg$"],"sources":["/Users/caitlinabramson/Repositories/toy-robot-simulator/src/components/MatrixContainer/MatrixContainer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Grid, Paper } from \"@mui/material\";\nimport \"./MatrixContainer.css\";\n\nenum Direction {\n  NORTH,\n  SOUTH,\n  EAST,\n  WEST,\n}\n\ninterface Robot {\n  row: number | null;\n  column: number | null;\n  direction: Direction;\n}\n\nconst MatrixContainer = () => {\n  const initRobot: Robot = {\n    row: null,\n    column: null,\n    // setting the initial direction to be north\n    direction: Direction.NORTH,\n  };\n  const [robot, setRobot] = useState(initRobot);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", (e: KeyboardEvent) =>\n      handleKeyDown(e, robot)\n    );\n  }, []);\n\n  const handleCellClick = (x: number, y: number) => {\n    setRobot({\n      row: x,\n      column: y,\n      direction: robot.direction,\n    });\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, robot: Robot) => {\n    console.log(\"handle jey down\");\n    const newRobot = robot;\n    switch (robot.direction) {\n      case Direction.NORTH:\n        if (event.key === \"ArrowLeft\") {\n          console.log(\"arrow left\");\n          newRobot.direction = Direction.WEST;\n        }\n        if (event.key === \"ArrowRight\") {\n          newRobot.direction = Direction.EAST;\n        }\n        break;\n      case Direction.SOUTH:\n        break;\n      case Direction.EAST:\n        break;\n      case Direction.WEST:\n        break;\n    }\n    setRobot(newRobot);\n  };\n\n  const renderCell = (row: number, column: number) => {\n    const isRobotHere = robot.row === row && robot.column === column;\n    const direction = robot.direction;\n    return (\n      <Grid item xs={12 / 5} key={`${row}, ${column}`}>\n        <Paper\n          onClick={() => handleCellClick(row, column)}\n          onKeyDown={(event) => handleKeyDown(event, direction)}\n        >\n          {isRobotHere ? \"ðŸ¤–\" : `${row},${column},${direction}`}\n        </Paper>\n      </Grid>\n    );\n  };\n\n  const grid = [];\n  for (let row = 4; row >= 0; row--) {\n    const cols = [];\n    for (let col = 0; col < 5; col++) {\n      cols.push(renderCell(col, row));\n    }\n    grid.push(\n      <Grid container item xs={12} key={row}>\n        {cols}\n      </Grid>\n    );\n  }\n\n  return (\n    <div className=\"matrix--container\">\n      <Grid container spacing={1}>\n        {grid}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MatrixContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}