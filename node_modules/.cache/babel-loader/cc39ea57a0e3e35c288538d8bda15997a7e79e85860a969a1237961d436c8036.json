{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinabramson/Repositories/toy-robot-simulator/src/components/MatrixContainer/MatrixContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Grid, Paper } from \"@mui/material\";\nimport \"./MatrixContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Direction = /*#__PURE__*/function (Direction) {\n  Direction[\"NORTH\"] = \"NORTH\";\n  Direction[\"SOUTH\"] = \"SOUTH\";\n  Direction[\"EAST\"] = \"EAST\";\n  Direction[\"WEST\"] = \"WEST\";\n  return Direction;\n}(Direction || {});\nconst MatrixContainer = () => {\n  _s();\n  const initRobot = {\n    row: null,\n    column: null\n    // setting the initial direction to be north\n    // direction: Direction.NORTH,\n  };\n  const [robotLocation, setRobotLocation] = useState(initRobot);\n  const [robotDirection, setRobotDirection] = useState(Direction.NORTH);\n  const handleKeyDown = useCallback((event, robotDirection, location) => {\n    switch (robotDirection) {\n      case \"NORTH\":\n        if (event.key === \"ArrowLeft\") {\n          setRobotDirection(Direction.WEST);\n        }\n        if (event.key === \"ArrowRight\") {\n          setRobotDirection(Direction.EAST);\n        }\n        break;\n      case \"SOUTH\":\n        if (event.key === \"ArrowLeft\") {\n          setRobotDirection(Direction.EAST);\n        }\n        if (event.key === \"ArrowRight\") {\n          setRobotDirection(Direction.WEST);\n        }\n        break;\n      case \"EAST\":\n        if (event.key === \"ArrowLeft\") {\n          setRobotDirection(Direction.NORTH);\n        }\n        if (event.key === \"ArrowRight\") {\n          setRobotDirection(Direction.SOUTH);\n        }\n        break;\n      case \"WEST\":\n        if (event.key === \"ArrowLeft\") {\n          setRobotDirection(Direction.SOUTH);\n        }\n        if (event.key === \"ArrowRight\") {\n          setRobotDirection(Direction.NORTH);\n        }\n        break;\n    }\n    switch (event.key) {\n      case \"n\":\n        setRobotDirection(Direction.NORTH);\n        break;\n      case \"s\":\n        setRobotDirection(Direction.SOUTH);\n        break;\n      case \"e\":\n        setRobotDirection(Direction.EAST);\n        break;\n      case \"w\":\n        setRobotDirection(Direction.WEST);\n        break;\n      case \"ArrowUp\":\n        console.log(location);\n        handleMove(location, robotDirection);\n    }\n  }, []);\n  useEffect(() => {\n    const keyDownHandler = event => handleKeyDown(event, robotDirection, robotLocation);\n    document.addEventListener(\"keydown\", keyDownHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownHandler);\n    };\n  }, [robotDirection, robotLocation, handleKeyDown]);\n  const handleCellClick = (x, y) => {\n    setRobotLocation({\n      row: x,\n      column: y\n    });\n  };\n  const handleMove = (location, direction) => {\n    switch (direction) {\n      case \"NORTH\":\n        if (location.row === 0) {\n          console.log(\"you can't move here!\");\n        }\n        if (location.row && location.column) {\n          setRobotLocation({\n            row: location.row - 1,\n            column: location.column\n          });\n        }\n        break;\n      case \"SOUTH\":\n        break;\n      case \"EAST\":\n        break;\n      case \"WEST\":\n        break;\n    }\n  };\n  const getDirection = direction => {\n    switch (direction) {\n      case \"NORTH\":\n        return \"rotate(0deg)\";\n      case \"EAST\":\n        return \"rotate(90deg)\";\n      case \"SOUTH\":\n        return \"rotate(180deg)\";\n      case \"WEST\":\n        return \"rotate(270deg)\";\n    }\n  };\n  const renderCell = (row, column) => {\n    const isRobotHere = robotLocation.row === row && robotLocation.column === column;\n    if (isRobotHere) {\n      console.log(\"row: \", row, \", column: \", column);\n    }\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12 / 5,\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          height: \"70px\",\n          flexGrow: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        onClick: () => handleCellClick(row, column),\n        children: isRobotHere && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"30px\",\n            width: \"fit-content\",\n            transform: getDirection(robotDirection)\n          },\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, `${row}, ${column}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  };\n  const grid = [];\n  for (let row = 4; row >= 0; row--) {\n    const cols = [];\n    for (let col = 0; col < 5; col++) {\n      cols.push(renderCell(row, col));\n    }\n    grid.push( /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      children: cols\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix--container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixContainer, \"mN1ELtnMQXFx41Nhr2wlI0tN6ug=\");\n_c = MatrixContainer;\nexport default MatrixContainer;\nvar _c;\n$RefreshReg$(_c, \"MatrixContainer\");","map":{"version":3,"names":["useCallback","useEffect","useState","Grid","Paper","jsxDEV","_jsxDEV","Direction","MatrixContainer","_s","initRobot","row","column","robotLocation","setRobotLocation","robotDirection","setRobotDirection","NORTH","handleKeyDown","event","location","key","WEST","EAST","SOUTH","console","log","handleMove","keyDownHandler","document","addEventListener","removeEventListener","handleCellClick","x","y","direction","getDirection","renderCell","isRobotHere","item","xs","style","display","children","height","flexGrow","alignItems","justifyContent","onClick","fontSize","width","transform","fileName","_jsxFileName","lineNumber","columnNumber","grid","cols","col","push","container","className","spacing","_c","$RefreshReg$"],"sources":["/Users/caitlinabramson/Repositories/toy-robot-simulator/src/components/MatrixContainer/MatrixContainer.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Grid, Paper } from \"@mui/material\";\nimport \"./MatrixContainer.css\";\n\nenum Direction {\n  NORTH = \"NORTH\",\n  SOUTH = \"SOUTH\",\n  EAST = \"EAST\",\n  WEST = \"WEST\",\n}\n\ninterface Location {\n  row: number | null;\n  column: number | null;\n}\n\nconst MatrixContainer = () => {\n  const initRobot: Location = {\n    row: null,\n    column: null,\n    // setting the initial direction to be north\n    // direction: Direction.NORTH,\n  };\n  const [robotLocation, setRobotLocation] = useState(initRobot);\n  const [robotDirection, setRobotDirection] = useState(Direction.NORTH);\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent, robotDirection: Direction, location: Location) => {\n      switch (robotDirection) {\n        case \"NORTH\":\n          if (event.key === \"ArrowLeft\") {\n            setRobotDirection(Direction.WEST);\n          }\n          if (event.key === \"ArrowRight\") {\n            setRobotDirection(Direction.EAST);\n          }\n          break;\n        case \"SOUTH\":\n          if (event.key === \"ArrowLeft\") {\n            setRobotDirection(Direction.EAST);\n          }\n          if (event.key === \"ArrowRight\") {\n            setRobotDirection(Direction.WEST);\n          }\n          break;\n        case \"EAST\":\n          if (event.key === \"ArrowLeft\") {\n            setRobotDirection(Direction.NORTH);\n          }\n          if (event.key === \"ArrowRight\") {\n            setRobotDirection(Direction.SOUTH);\n          }\n          break;\n        case \"WEST\":\n          if (event.key === \"ArrowLeft\") {\n            setRobotDirection(Direction.SOUTH);\n          }\n          if (event.key === \"ArrowRight\") {\n            setRobotDirection(Direction.NORTH);\n          }\n          break;\n      }\n      switch (event.key) {\n        case \"n\":\n          setRobotDirection(Direction.NORTH);\n          break;\n        case \"s\":\n          setRobotDirection(Direction.SOUTH);\n          break;\n        case \"e\":\n          setRobotDirection(Direction.EAST);\n          break;\n        case \"w\":\n          setRobotDirection(Direction.WEST);\n          break;\n        case \"ArrowUp\":\n          console.log(location);\n          handleMove(location, robotDirection);\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const keyDownHandler = (event: KeyboardEvent) =>\n      handleKeyDown(event, robotDirection, robotLocation);\n    document.addEventListener(\"keydown\", keyDownHandler);\n\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownHandler);\n    };\n  }, [robotDirection, robotLocation, handleKeyDown]);\n\n  const handleCellClick = (x: number, y: number) => {\n    setRobotLocation({\n      row: x,\n      column: y,\n    });\n  };\n\n  const handleMove = (location: Location, direction: Direction) => {\n    switch (direction) {\n      case \"NORTH\":\n        if (location.row === 0) {\n          console.log(\"you can't move here!\");\n        }\n        if (location.row && location.column) {\n          setRobotLocation({ row: location.row - 1, column: location.column });\n        }\n        break;\n      case \"SOUTH\":\n        break;\n      case \"EAST\":\n        break;\n      case \"WEST\":\n        break;\n    }\n  };\n\n  const getDirection = (direction: Direction) => {\n    switch (direction) {\n      case \"NORTH\":\n        return \"rotate(0deg)\";\n      case \"EAST\":\n        return \"rotate(90deg)\";\n      case \"SOUTH\":\n        return \"rotate(180deg)\";\n      case \"WEST\":\n        return \"rotate(270deg)\";\n    }\n  };\n\n  const renderCell = (row: number, column: number) => {\n    const isRobotHere =\n      robotLocation.row === row && robotLocation.column === column;\n\n    if (isRobotHere) {\n      console.log(\"row: \", row, \", column: \", column);\n    }\n    return (\n      <Grid\n        item\n        xs={12 / 5}\n        key={`${row}, ${column}`}\n        style={{ display: \"flex\" }}\n      >\n        <Paper\n          style={{\n            height: \"70px\",\n            flexGrow: 1,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onClick={() => handleCellClick(row, column)}\n        >\n          {isRobotHere && (\n            <p\n              style={{\n                fontSize: \"30px\",\n                width: \"fit-content\",\n                transform: getDirection(robotDirection),\n              }}\n            >\n              🤖\n            </p>\n          )}\n        </Paper>\n      </Grid>\n    );\n  };\n\n  const grid = [];\n  for (let row = 4; row >= 0; row--) {\n    const cols = [];\n    for (let col = 0; col < 5; col++) {\n      cols.push(renderCell(row, col));\n    }\n    grid.push(\n      <Grid container item xs={12} key={row}>\n        {cols}\n      </Grid>\n    );\n  }\n\n  return (\n    <div className=\"matrix--container\">\n      <Grid container spacing={1}>\n        {grid}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MatrixContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}