{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinabramson/Repositories/toy-robot-simulator/src/components/MatrixContainer/MatrixContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Grid, Paper } from \"@mui/material\";\nimport \"./MatrixContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixContainer = () => {\n  _s();\n  const initRobot = {\n    row: null,\n    column: null,\n    direction: \"north\"\n  };\n  const [robot, setRobot] = useState(initRobot);\n  const handleCellClick = (x, y) => {\n    setRobot({\n      row: x,\n      column: y,\n      direction: robot.direction\n    });\n  };\n  const renderCell = (row, column) => {\n    const isRobotHere = robot.row === row && robot.column === column;\n    const direction = robot.direction;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12 / 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        onClick: () => handleCellClick(row, column),\n        children: isRobotHere ? \"ðŸ¤–\" : `${row},${column},${direction}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, `${row}-${column}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix--container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: Array.from({\n        length: 5\n      }, (_, row) => 4 - row).map(row => Array.from({\n        length: 5\n      }).map((_, col) => renderCell(col, row)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixContainer, \"V5lAXvlF2gp0FuYHuNtRXC5jzH0=\");\n_c = MatrixContainer;\nexport default MatrixContainer;\nvar _c;\n$RefreshReg$(_c, \"MatrixContainer\");","map":{"version":3,"names":["useState","Grid","Paper","jsxDEV","_jsxDEV","MatrixContainer","_s","initRobot","row","column","direction","robot","setRobot","handleCellClick","x","y","renderCell","isRobotHere","item","xs","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","container","spacing","Array","from","length","_","map","col","_c","$RefreshReg$"],"sources":["/Users/caitlinabramson/Repositories/toy-robot-simulator/src/components/MatrixContainer/MatrixContainer.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Grid, Paper } from \"@mui/material\";\nimport \"./MatrixContainer.css\";\n\ninterface Robot {\n  row: number | null;\n  column: number | null;\n  direction: \"north\" | \"south\" | \"east\" | \"west\";\n}\n\nconst MatrixContainer = () => {\n  const initRobot: Robot = {\n    row: null,\n    column: null,\n    direction: \"north\",\n  };\n  const [robot, setRobot] = useState(initRobot);\n\n  const handleCellClick = (x: number, y: number) => {\n    setRobot({\n      row: x,\n      column: y,\n      direction: robot.direction,\n    });\n  };\n\n  const renderCell = (row: number, column: number) => {\n    const isRobotHere = robot.row === row && robot.column === column;\n    const direction = robot.direction;\n    return (\n      <Grid item xs={12 / 5} key={`${row}-${column}`}>\n        <Paper onClick={() => handleCellClick(row, column)}>\n          {isRobotHere ? \"ðŸ¤–\" : `${row},${column},${direction}`}\n        </Paper>\n      </Grid>\n    );\n  };\n\n  return (\n    <div className=\"matrix--container\">\n      <Grid container spacing={1}>\n        {Array.from({ length: 5 }, (_, row) => 4 - row).map((row) =>\n          Array.from({ length: 5 }).map((_, col) => renderCell(col, row))\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default MatrixContainer;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,KAAK,QAAQ,eAAe;AAC3C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,SAAgB,GAAG;IACvBC,GAAG,EAAE,IAAI;IACTC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE;EACb,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACO,SAAS,CAAC;EAE7C,MAAMM,eAAe,GAAGA,CAACC,CAAS,EAAEC,CAAS,KAAK;IAChDH,QAAQ,CAAC;MACPJ,GAAG,EAAEM,CAAC;MACNL,MAAM,EAAEM,CAAC;MACTL,SAAS,EAAEC,KAAK,CAACD;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,UAAU,GAAGA,CAACR,GAAW,EAAEC,MAAc,KAAK;IAClD,MAAMQ,WAAW,GAAGN,KAAK,CAACH,GAAG,KAAKA,GAAG,IAAIG,KAAK,CAACF,MAAM,KAAKA,MAAM;IAChE,MAAMC,SAAS,GAAGC,KAAK,CAACD,SAAS;IACjC,oBACEN,OAAA,CAACH,IAAI;MAACiB,IAAI;MAACC,EAAE,EAAE,EAAE,GAAG,CAAE;MAAAC,QAAA,eACpBhB,OAAA,CAACF,KAAK;QAACmB,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACL,GAAG,EAAEC,MAAM,CAAE;QAAAW,QAAA,EAChDH,WAAW,GAAG,IAAI,GAAG,GAAGT,GAAG,IAAIC,MAAM,IAAIC,SAAS;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC,GAHkB,GAAGjB,GAAG,IAAIC,MAAM,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIxC,CAAC;EAEX,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAN,QAAA,eAChChB,OAAA,CAACH,IAAI;MAAC0B,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACxBS,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,CAACC,CAAC,EAAExB,GAAG,KAAK,CAAC,GAAGA,GAAG,CAAC,CAACyB,GAAG,CAAEzB,GAAG,IACtDqB,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAACE,GAAG,CAAC,CAACD,CAAC,EAAEE,GAAG,KAAKlB,UAAU,CAACkB,GAAG,EAAE1B,GAAG,CAAC,CAChE;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}